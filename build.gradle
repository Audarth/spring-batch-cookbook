buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3"
    }
}


plugins {
    id "com.marklogic.ml-gradle" version "2.5.0"
    id "java"
    id "maven-publish"
    id "application"
}

apply plugin: "com.jfrog.bintray"

group 'com.marklogic'
version '1.2.1'

mainClassName = "com.marklogic.hector.CommandLineJobRunner"

repositories {
    jcenter()
    maven { url "http://developer.marklogic.com/maven2/" }
}

dependencies {
    compile 'com.marklogic:marklogic-spring-batch-infrastructure:0.10.2'
    testCompile 'com.marklogic:marklogic-spring-batch-test:0.10.2'
    testCompile "com.marklogic:ml-junit:2.6.0"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    baseName = project.name
    version = version
    classifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mainJavaWithSources(MavenPublication) {
            groupId group
            artifactId project.name
            version version
            from components.java
            artifact sourcesJar
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_KEY')
    publications = ["mainJavaWithSources"]
    pkg {
        repo = "maven"
        name = project.name
        userOrg = "sastafford"
        licenses = ["Apache-2.0"]
        vcsUrl = "https://github.com/sastafford/hector.git"
        version {
            name = project.version
            released = new Date()
            vcsTag = project.version
        }
    }
}

task importBabyNames(type: JavaExec) {
    main = 'com.marklogic.hector.CommandLineJobRunner'
    classpath = sourceSets.test.runtimeClasspath
    args = ["input_file_path=./src/test/resources/Most_Popular_Baby_Names_NYC.csv",
            "delimited_root_name=baby-name",
            "document_type=xml",
            "output_collections=baby-name",
            "chunk_size=5",
            "output_transform=com.marklogic.hector.examples.babies.BabyNameColumnMapSerializer"]
            //"uri_transform=com.marklogic.hector.examples.babies.BabyNameUriGenerator"]
}
